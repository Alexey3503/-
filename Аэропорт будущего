#include <SPI.h>
#include <MFRC522.h>
#include <EEPROM.h>

#define RST_PIN 9 
#define SS_PIN 10 
MFRC522 mfrc522(SS_PIN, RST_PIN); 

#define MAX_CARDS 10
#define CARD_SIZE 4
#define EEPROM_ADDRESS 0

int numCards = 0;
byte cardIDs[MAX_CARDS][CARD_SIZE];

void setup() {
  Serial.begin(9600);
  SPI.begin(); 
  mfrc522.PCD_Init(); 
  Serial.println("Ready to read RFID bracelets!");
}

void loop() {
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    String cardID = "";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      cardID.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : ""));
      cardID.concat(String(mfrc522.uid.uidByte[i], HEX));
    }

    if (checkValidity(cardID)) {

      if (numCards < MAX_CARDS) {
        for (byte i = 0; i < CARD_SIZE; i++) {
          cardIDs[numCards][i] = mfrc522.uid.uidByte[i];
          EEPROM.write(EEPROM_ADDRESS + numCards * CARD_SIZE + i, cardIDs[numCards][i]);
        }
        numCards++;
        Serial.println("Card saved");
      } 
      else {
        Serial.println("Max number of cards reached");
      }

      digitalWrite(LED_BUILTIN, HIGH); 
      tone(8, 440, 500); 
      delay(1000);
      digitalWrite(LED_BUILTIN, LOW); 

    } else {
      Serial.println("Unauthorized card");
    }
    mfrc522.PICC_HaltA();
    mfrc522.PCD_StopCrypto1();
  }
}

bool checkValidity(String cardID) {
  for (int i = 0; i < numCards; i++) {
    bool match = true;
    for (byte j = 0; j < CARD_SIZE; j++) {
      if (cardIDs[i][j] != mfrc522.uid.uidByte[j]) {
        match = false;
        break;
      }
    }
    if (match) {
      return true;
    }
  }
  return false;
}
